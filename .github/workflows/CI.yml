# This file is autogenerated by maturin v0.14.17
# To update, run
#
#    maturin generate-ci github -m polars_distance/Cargo.toml --platform all
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write


jobs:
  linux_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Rust
        run: rustup show
      - uses: mozilla-actions/sccache-action@v0.0.3
      - run: make install
        working-directory: polars_distance
      - run: venv/bin/python -m pytest tests
        working-directory: polars_distance
      - run: venv/bin/python -m mypy polars_distance
        working-directory: polars_distance
      - run: venv/bin/python -m ruff check --diff .
        working-directory: polars_distance
      - run: venv/bin/python -m ruff format --check --diff
        working-directory: polars_distance

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, ppc64le] # s390x: failed during compilation
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path polars_distance/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path polars_distance/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path polars_distance/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path polars_distance/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux_tests, linux, macos, windows, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
  

  # deploy_docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Configure Git Credentials
  #       run: |
  #         git config user.name github-actions[bot]
  #         git config user.email 41898282+github-actions[bot]@users.noreply.github.com
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.x
  #     - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
  #     - uses: actions/cache@v3
  #       with:
  #         key: mkdocs-material-${{ env.cache_id }}
  #         path: .cache
  #         restore-keys: |
  #           mkdocs-material-
  #     - run: make install
  #       working-directory: polars_distance
  #     - run: pip install -r requirements.txt
  #       working-directory: polars_distance
  #     - run: mkdocs gh-deploy --force
